{"ast":null,"code":"import _classCallCheck from \"/Users/frankjia/Desktop/Programming/CryptoDashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/frankjia/Desktop/Programming/CryptoDashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/frankjia/Desktop/Programming/CryptoDashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/frankjia/Desktop/Programming/CryptoDashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/frankjia/Desktop/Programming/CryptoDashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/frankjia/Desktop/Programming/CryptoDashboard/src/App.js\";\nimport React, { Component } from 'react';\nimport TopTable from './market_overview/TopTable';\nimport MoversTable from './market_overview/MoversTable';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      data: null\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://min-api.cryptocompare.com/data/top/mktcapfull?limit=100&tsym=USD\", {\n        method: 'GET',\n        headers: {\n          'authorization': \"Apikey \".concat(process.env.CRYPTOCOMPARE_API_KEY)\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        console.log(result);\n\n        _this2.setState({\n          isLoaded: true,\n          data: result.Data\n        });\n      }, function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (this.state.data) {\n        var topChartsData = this.state.data; // Slice to create a new array\n\n        var sortedBy24HrPrice = topChartsData.slice().sort(function (a, b) {\n          return a.RAW.USD.CHANGEPCT24HOUR < b.RAW.USD.CHANGEPCT24HOUR;\n        });\n        var topTen = topChartsData.slice(0, 10);\n        var topTenGainers = sortedBy24HrPrice.slice(0, 10);\n        var topTenLosers = sortedBy24HrPrice.slice(-10).reverse();\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"Crypto Dashboard\"), React.createElement(TopTable, {\n          data: topTen,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(MoversTable, {\n          data: topTenGainers,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), React.createElement(MoversTable, {\n          data: topTenLosers,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }));\n      } else {\n        return React.createElement(\"div\", {\n          className: \"App\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, \"Loading\"));\n      }\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/frankjia/Desktop/Programming/CryptoDashboard/src/App.js"],"names":["React","Component","TopTable","MoversTable","App","props","state","error","isLoaded","data","fetch","method","headers","process","env","CRYPTOCOMPARE_API_KEY","then","res","json","result","console","log","setState","Data","topChartsData","sortedBy24HrPrice","slice","sort","a","b","RAW","USD","CHANGEPCT24HOUR","topTen","topTenGainers","topTenLosers","reverse"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;;IAEMC,G;;;;;AAEJ,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,6EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE,IADE;AAETC,MAAAA,QAAQ,EAAE,KAFD;AAGTC,MAAAA,IAAI,EAAE;AAHG,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAElBC,MAAAA,KAAK,6EAA6E;AAChFC,QAAAA,MAAM,EAAE,KADwE;AAEhFC,QAAAA,OAAO,EAAE;AACP,4CAA2BC,OAAO,CAACC,GAAR,CAAYC,qBAAvC;AADO;AAFuE,OAA7E,CAAL,CAMGC,IANH,CAMQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OANX,EAOGF,IAPH,CAQI,UAACG,MAAD,EAAY;AACVC,QAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;;AACA,QAAA,MAAI,CAACG,QAAL,CAAc;AACZd,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,IAAI,EAAEU,MAAM,CAACI;AAFD,SAAd;AAID,OAdL,EAeI,UAAChB,KAAD,EAAW;AACT,QAAA,MAAI,CAACe,QAAL,CAAc;AACZd,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAALA;AAFY,SAAd;AAID,OApBL;AAsBD;;;6BAEQ;AACP,UAAG,KAAKD,KAAL,CAAWG,IAAd,EAAoB;AAElB,YAAIe,aAAa,GAAG,KAAKlB,KAAL,CAAWG,IAA/B,CAFkB,CAGlB;;AACA,YAAIgB,iBAAiB,GAAGD,aAAa,CAACE,KAAd,GAAsBC,IAAtB,CAA2B,UAACC,CAAD,EAAIC,CAAJ;AAAA,iBAAUD,CAAC,CAACE,GAAF,CAAMC,GAAN,CAAUC,eAAV,GAA4BH,CAAC,CAACC,GAAF,CAAMC,GAAN,CAAUC,eAAhD;AAAA,SAA3B,CAAxB;AAEA,YAAIC,MAAM,GAAGT,aAAa,CAACE,KAAd,CAAoB,CAApB,EAAuB,EAAvB,CAAb;AACA,YAAIQ,aAAa,GAAGT,iBAAiB,CAACC,KAAlB,CAAwB,CAAxB,EAA2B,EAA3B,CAApB;AACA,YAAIS,YAAY,GAAGV,iBAAiB,CAACC,KAAlB,CAAwB,CAAC,EAAzB,EAA6BU,OAA7B,EAAnB;AAEA,eACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAKE,oBAAC,QAAD;AAAU,UAAA,IAAI,EAAEH,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UALF,EAME,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAEC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UANF,EAOE,oBAAC,WAAD;AAAa,UAAA,IAAI,EAAEC,YAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAPF,CADF;AAWD,OArBD,MAqBO;AACL,eACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CADF;AAOD;AAEF;;;;EArEelC,S;;AAwElB,eAAeG,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport TopTable from './market_overview/TopTable'\nimport MoversTable from './market_overview/MoversTable'\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        error: null,\n        isLoaded: false,\n        data: null\n    };\n  }\n\n  componentDidMount() {\n\n    fetch(`https://min-api.cryptocompare.com/data/top/mktcapfull?limit=100&tsym=USD`, {\n      method: 'GET',\n      headers: {\n        'authorization': `Apikey ${process.env.CRYPTOCOMPARE_API_KEY}`\n        },\n    })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result)\n          this.setState({\n            isLoaded: true,\n            data: result.Data\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n  }\n\n  render() {\n    if(this.state.data) {\n\n      let topChartsData = this.state.data\n      // Slice to create a new array\n      let sortedBy24HrPrice = topChartsData.slice().sort((a, b) => a.RAW.USD.CHANGEPCT24HOUR < b.RAW.USD.CHANGEPCT24HOUR)\n\n      let topTen = topChartsData.slice(0, 10)\n      let topTenGainers = sortedBy24HrPrice.slice(0, 10)\n      let topTenLosers = sortedBy24HrPrice.slice(-10).reverse()\n\n      return (\n        <div className=\"App\">\n          <h1>\n            Crypto Dashboard\n          </h1>\n          \n          <TopTable data={topTen}/>\n          <MoversTable data={topTenGainers}/>\n          <MoversTable data={topTenLosers}/>\n        </div>\n      );\n    } else {\n      return (\n        <div className=\"App\">\n          <h1>\n            Loading\n          </h1>\n        </div>\n      )\n    }\n    \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}