{"version":3,"sources":["util/TablePaginationActions.js","market_overview/components/TopTable.js","util/SimplePriceChart.js","market_overview/components/CoinDetails.js","market_overview/TopTenOverview.js","market_overview/components/MoversTable.js","market_overview/LatestActivity.js","market_overview/NewsFeed.js","settings/ApiKeyForm.js","App.js","index.js"],"names":["TablePaginationActions","handleFirstPageButtonClick","event","_this","props","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","_this$props","this","theme","react_default","a","createElement","className","IconButton_default","onClick","disabled","aria-label","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","React","Component","withStyles","withTheme","TopTable","state","handleChangePage","setState","_this2","data","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","slice","map","ticker","index","key","CoinInfo","Name","e","rowClicked","selected","selectedTickerIndex","component","scope","src","ImageUrl","alt","FullName","DISPLAY","USD","PRICE","RAW","CHANGEPCT24HOUR","concat","TableFooter_default","TablePagination_default","colSpan","length","rowsPerPageOptions","ActionsComponent","TablePaginationActionsWrapped","SimplePriceChart","primaryColor","palette","primary","main","console","log","timePeriod","labels","timePoint","Date","time","datasets","borderColor","backgroundColor","pointRadius","close","options","tooltips","enabled","legend","display","scales","xAxes","type","gridLines","unit","yAxes","ticks","callback","value","values","es","DAY_URL","HOUR_URL","MIN_URL","TIME_PERIOD_DAY","CoinDetails","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","timePeriodSelected","newTimePeriod","preventDefault","fetchData","tickerName","fetchURL","replace","fetch","method","headers","authorization","process","CRYPTOCOMPARE_API_KEY","then","res","json","result","chartIsLoaded","chartData","Data","error","coinInfo","displayUSD","ButtonGroup_default","Button_default","variant","active","util_SimplePriceChart","MKTCAP","TOTALVOLUME24HTO","OPEN24HOUR","HIGH24HOUR","LOW24HOUR","prevProps","prevState","TopTenOverview","tableRowClicked","Row_default","Col_default","xs","components_TopTable","bind","components_CoinDetails","selectedTicker","MoversTable","header","showHeaders","components_MoversTable","topGainers","topLosers","auth","Access-Control-Allow-Origin","crossDomain","isLoaded","results","Spinner","require","newsItem","id","href","url","target","rel","title","dist_default","format","published_at","source","name","color","setInterval","ApiKeyForm","cryptopanicKey","cryptocompareKey","onFieldChanged","stateKey","defineProperty","onFormSubmission","parentCallback","TextField_default","label","placeholder","margin","onChange","core_Button_default","newKeysEntered","App","keys","ls","set","window","location","reload","cryptocompare","cryptopanic","topChartsData","sortedBy24HrPrice","sort","b","topTenGainers","topTenLosers","reverse","market_overview_TopTenOverview","LatestActivity","NewsFeed","settings_ApiKeyForm","get","createMuiTheme","blue","secondary","amber","typography","useNextVariants","fontFamily","join","render","styles","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.7fd98cb6.chunk.js","sourcesContent":["import React from 'react';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport IconButton from '@material-ui/core/IconButton'\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\nimport LastPageIcon from '@material-ui/icons/LastPage';\n\n\n/**\n * Component for Pagination\n */\nclass TablePaginationActions extends React.Component {\n\n    // Sets page # to 0\n    handleFirstPageButtonClick = event => {\n      this.props.onChangePage(event, 0);\n    };\n  \n    // Decreases page #\n    handleBackButtonClick = event => {\n      this.props.onChangePage(event, this.props.page - 1);\n    };\n  \n    // Increases page #\n    handleNextButtonClick = event => {\n      this.props.onChangePage(event, this.props.page + 1);\n    };\n  \n    // Sets page # to the max \n    handleLastPageButtonClick = event => {\n      this.props.onChangePage(event,\n        Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\n      );\n    };\n  \n    render() {\n      const {count, page, theme, rowsPerPage} = this.props;\n  \n      return (\n        <div className=\"table-pagination\">\n  \n          <IconButton\n            onClick={this.handleFirstPageButtonClick}\n            disabled={page === 0}\n            aria-label=\"First Page\">\n            {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n          </IconButton>\n  \n          <IconButton\n            onClick={this.handleBackButtonClick}\n            disabled={page === 0}\n            aria-label=\"Previous Page\">\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n          </IconButton>\n  \n          <IconButton\n            onClick={this.handleNextButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"Next Page\">\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n          </IconButton>\n  \n          <IconButton\n            onClick={this.handleLastPageButtonClick}\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n            aria-label=\"Last Page\">\n            {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n          </IconButton>\n  \n        </div>\n      );\n    }\n  }\n  \n  // Exported pagination with styles from theme\n  export default withStyles({}, { withTheme: true })(\n    TablePaginationActions,\n  );","import React, { Component } from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport TablePaginationActionsWrapped from '../../util/TablePaginationActions'\n\nconst CRYPTOCOMPARE_ROOT_URL = \"https://www.cryptocompare.com/\"\nconst ROWS_PER_PAGE = 10\n\nclass TopTable extends Component {\n\n  state = {\n    page: 0\n  };\n\n  // This gets called by the pagination class (passed as a prop)\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  render() {\n\n    let data = this.props.data\n\n    // Only load table if data is available\n    if (data) {\n      let page = this.state.page\n      return (\n          <Table className=\"top-charts-table\">\n            <TableHead>\n              <TableRow>\n                <TableCell>#</TableCell>\n                <TableCell>Ticker</TableCell>\n                <TableCell>Name</TableCell>\n                <TableCell>Price (USD)</TableCell>\n                <TableCell>24 Hr Change (%)</TableCell>\n              </TableRow>\n            </TableHead>\n\n            <TableBody>\n              {data.slice(page * ROWS_PER_PAGE, (page + 1) * ROWS_PER_PAGE).map( (ticker, index) => (\n\n                <TableRow \n                  className=\"cursor-pointer\" \n                  key={ticker.CoinInfo.Name} \n                  onClick={((e) => this.props.rowClicked(e, index + page*10))}\n                  selected={index === (this.props.selectedTickerIndex - page*10)}\n                >\n                  <TableCell className=\"table-index-coln\">{index + 1 + page*10}</TableCell>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <img className=\"ticker-img\" src={CRYPTOCOMPARE_ROOT_URL+ticker.CoinInfo.ImageUrl} alt={ticker.CoinInfo.Name}/>&nbsp;&nbsp;{ticker.CoinInfo.Name}\n                  </TableCell>\n                  <TableCell>{ticker.CoinInfo.FullName}</TableCell>\n                  <TableCell>{ticker.DISPLAY.USD.PRICE}</TableCell>\n                  <TableCell><span className={ticker.RAW.USD.CHANGEPCT24HOUR > 0 ? \"green_text\" : \"red_text\"}>{`${ticker.DISPLAY.USD.CHANGEPCT24HOUR} %`}</span></TableCell>\n                </TableRow>\n\n              ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                  <TablePagination\n                    colSpan={5}\n                    count={data.length}\n                    rowsPerPageOptions={[ROWS_PER_PAGE]}\n                    rowsPerPage={ROWS_PER_PAGE}\n                    page={this.state.page}\n                    onChangePage={this.handleChangePage}\n                    ActionsComponent={TablePaginationActionsWrapped}\n                  />\n              </TableRow>\n            </TableFooter>\n          </Table>\n\n      )\n    } else {\n      // If no data loaded, return an empty div\n      return null\n    }\n  }\n}\n\nexport default TopTable","import React, { Component } from 'react';\nimport {Line} from 'react-chartjs-2';\nimport { withTheme } from '@material-ui/core/styles';\n\nclass SimplePriceChart extends Component {\n\n  render() {\n\n    const primaryColor = this.props.theme.palette.primary.main;\n    console.log(this.props.timePeriod)\n\n    if(this.props.data) {\n      const times = this.props.data.map(timePoint =>\n        new Date(timePoint.time*1000)\n      );\n      const closePrices = this.props.data.map(timePoint => timePoint.close)\n      const data = {\n        labels: times,\n        datasets: [\n          {\n            borderColor: primaryColor,\n            backgroundColor: '#FFFFFF',\n            pointRadius: 0,\n            data: closePrices,\n          }\n        ],\n      }\n\n      const options = {\n        tooltips: {\n          enabled: false\n        },\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n              type: 'time',\n              gridLines: {\n                display:false\n              },\n              time: {\n                  unit: this.props.timePeriod\n              }\n          }],\n          yAxes: [{\n            gridLines: {\n              display:false\n            },\n            ticks: {\n                callback: function(value, index, values) {\n                    // Include a dollar sign in the ticks\n                    return '$ ' + value;\n                }\n            }\n          }]\n        }\n      }\n      \n      return (\n        <div className=\"simple-price-chart\">\n          <Line data={data} options={options}/>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"simple-price-chart-error\">\n          <h2>Error loading data</h2>\n        </div>\n      )\n    }\n    \n  }\n\n}\n\nexport default withTheme()(SimplePriceChart);","import React, { Component } from 'react';\nimport './css/coin_details.css'\nimport SimplePriceChart from '../../util/SimplePriceChart'\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\nimport Button from  'react-bootstrap/Button'\n\n// For fetching data - consider passing some of these as props\nconst NUM_DAYS = 10\nconst NUM_MIN = 120\nconst NUM_HR = 48\n\nconst DAY_URL = `https://min-api.cryptocompare.com/data/histoday?fsym={TICKER}&tsym=USD&limit=${NUM_DAYS}`\nconst HOUR_URL = `https://min-api.cryptocompare.com/data/histohour?fsym={TICKER}&tsym=USD&limit=${NUM_HR}`\nconst MIN_URL =  `https://min-api.cryptocompare.com/data/histominute?fsym={TICKER}&tsym=USD&limit=${NUM_MIN}`\n\nconst TIME_PERIOD_DAY = \"day\"\nconst TIME_PERIOD_HR = \"hour\"\nconst TIME_PERIOD_MIN = \"minute\"\n\nclass CoinDetails extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      chartIsLoaded: false,\n      chartData: null,\n      timePeriod: TIME_PERIOD_DAY\n    };\n  }\n\n  timePeriodSelected = (e, newTimePeriod) => {\n    e.preventDefault()\n    this.setState({\n      timePeriod: newTimePeriod\n    })\n  }\n\n  render() {\n\n    let ticker = this.props.ticker\n    // Only show details if a ticker is defined\n    if (ticker) {\n      let coinInfo = ticker.CoinInfo\n      let displayUSD = ticker.DISPLAY.USD\n      return (\n        <div className=\"coin-details-wrapper\">\n          <h2>{coinInfo.FullName}</h2>\n          <h4>{coinInfo.Name} | {displayUSD.PRICE}</h4>\n          <div className=\"coin-details-section\">\n            <h3 className=\"coin-details-chart-heading\">Chart</h3>\n            <div className=\"timeperiod-select\">\n              <ButtonGroup>\n                <Button variant=\"outline-primary\" active={this.state.timePeriod === TIME_PERIOD_DAY} onClick={(e) => {this.timePeriodSelected(e, TIME_PERIOD_DAY)}}>Day</Button>\n                <Button variant=\"outline-primary\" active={this.state.timePeriod === TIME_PERIOD_HR} onClick={(e) => {this.timePeriodSelected(e, TIME_PERIOD_HR)}}>Hour</Button>\n                <Button variant=\"outline-primary\" active={this.state.timePeriod === TIME_PERIOD_MIN} onClick={(e) => {this.timePeriodSelected(e, TIME_PERIOD_MIN)}}>Minute</Button>\n              </ButtonGroup>\n            </div>\n            <SimplePriceChart data={this.state.chartData} timePeriod={this.state.timePeriod}></SimplePriceChart>\n          </div>\n\n          <div className=\"coin-details-section\">\n            <h3 className=\"coin-details-details-heading\">Details</h3>\n            <p><span className=\"detail-label\">Price:</span> <span>{displayUSD.PRICE}</span></p>\n            <p><span className=\"detail-label\">Market Cap:</span> <span>{displayUSD.MKTCAP}</span></p>\n            <p><span className=\"detail-label\">Change % (24hr):</span> <span>{displayUSD.CHANGEPCT24HOUR} %</span></p>\n            <p><span className=\"detail-label\">Volume (24hr):</span> <span>{displayUSD.TOTALVOLUME24HTO}</span></p>\n            <p><span className=\"detail-label\">Open (24hr):</span> <span>{displayUSD.OPEN24HOUR}</span></p>\n            <p><span className=\"detail-label\">High (24hr):</span> <span>{displayUSD.HIGH24HOUR}</span></p>\n            <p><span className=\"detail-label\">Low (24hr):</span> <span>{displayUSD.LOW24HOUR}</span></p>            \n          </div>\n\n        </div>\n\n      )\n    } else {\n      return <h1>No Ticker Selected</h1>\n    }\n  }\n\n  // Fetch data on new prop information\n  componentDidUpdate(prevProps, prevState) {\n    // Also checks if price is different (meaning the component should update its display)\n    if ((prevProps.ticker.CoinInfo.Name !== this.props.ticker.CoinInfo.Name) || \n    (prevProps.ticker.DISPLAY.USD.PRICE !== this.props.ticker.DISPLAY.USD.PRICE)) {\n      this.fetchData(this.props.ticker.CoinInfo.Name);\n    }\n    // Check if timeperiod has changed\n    if(prevState.timePeriod !== this.state.timePeriod) {\n      this.fetchData(this.props.ticker.CoinInfo.Name);\n    }\n  }\n  \n  // Fetch data when component mounts\n  componentDidMount() {\n    this.fetchData(this.props.ticker.CoinInfo.Name)\n  }\n\n  // Pull data for ticker\n  fetchData = (tickerName) => {\n\n    let fetchURL\n    let timePeriod = this.state.timePeriod\n    if(timePeriod === \"day\") {\n      fetchURL = DAY_URL\n    } else if (timePeriod === \"hour\") {\n      fetchURL = HOUR_URL\n    } else {\n      // Default to minutes\n      fetchURL = MIN_URL\n    }\n    fetchURL = fetchURL.replace(\"{TICKER}\", tickerName)\n\n    fetch(fetchURL, {\n      method: 'GET',\n      headers: {\n        'authorization': `Apikey ${process.env.CRYPTOCOMPARE_API_KEY}`\n        },\n    })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result)\n          this.setState({\n            chartIsLoaded: true,\n            chartData: result.Data\n          });\n        },\n        (error) => {\n          this.setState({\n            chartIsLoaded: true,\n            error\n          });\n        }\n      )\n\n  }\n\n}\n\nexport default CoinDetails","import React, { Component } from 'react';\nimport './css/top_ten_overview.css'\n\nimport TopTable from './components/TopTable';\nimport CoinDetails from './components/CoinDetails'\n\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nclass TopTenOverview extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTickerIndex: 0,\n    };\n  }\n\n  // Method to run when user clicks on a row\n  // This is passed to TopTable\n  tableRowClicked = (e, index) => {\n    e.preventDefault()\n    this.setState({\n      selectedTickerIndex: index\n    })\n  }\n\n  render() {\n\n    return (\n\n      <div className=\"content-box\">\n        <Row>\n          <Col xs=\"8\">\n            <TopTable \n              data={this.props.data} \n              rowClicked={this.tableRowClicked.bind(this)}\n              selectedTickerIndex={this.state.selectedTickerIndex}\n            />\n          </Col>\n          <Col xs=\"4\">\n            <CoinDetails\n              ticker={(this.props.data ? this.props.data[this.state.selectedTickerIndex] : null)}\n            />\n          </Col>\n        </Row>\n      </div>\n\n    )\n  }\n\n  componentDidMount() {\n    if (this.props.data) {\n      this.setState({selectedTicker: this.props.data[this.state.selectedTickerIndex]})\n    }\n  }\n\n  componentWillReceiveProps() {\n    this.setState({\n      selectedTicker: this.props.data[this.state.selectedTickerIndex]\n    })\n  }\n\n}\n\nexport default TopTenOverview","import React, { Component } from 'react';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\n\nclass MoversTable extends Component {\n\n  render() {\n    let data = this.props.data\n    if (data) {\n\n      let header;\n      if(this.props.showHeaders) {\n        header = \n        <TableHead>\n          <TableRow>\n            <TableCell>Ticker</TableCell>\n            <TableCell>Name</TableCell>\n            <TableCell>Price (USD)</TableCell>\n            <TableCell>24 Hr Change (%)</TableCell>\n          </TableRow>\n        </TableHead>\n      }\n\n      return (\n        <Table className=\"top-movers-table\">\n\n            {header}\n\n            <TableBody>\n\n              {data.map( (ticker, index) => (\n\n                <TableRow key={ticker.CoinInfo.Name} >\n                  <TableCell component=\"th\" scope=\"row\">{ticker.CoinInfo.Name}</TableCell>\n                  <TableCell>{ticker.CoinInfo.FullName}</TableCell>\n                  <TableCell>{ticker.DISPLAY.USD.PRICE}</TableCell>\n                  <TableCell><span className={ticker.RAW.USD.CHANGEPCT24HOUR > 0 ? \"green_text\" : \"red_text\"}>{`${ticker.DISPLAY.USD.CHANGEPCT24HOUR} %`}</span></TableCell>\n                </TableRow>\n\n              ))}\n            </TableBody>\n          </Table>\n      )\n    } else {\n      return null\n    }\n  }\n}\n\nexport default MoversTable;\n","import React, { Component } from 'react';\nimport './css/latest_activity.css'\n\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\nimport MoversTable from './components/MoversTable';\n\nclass TopTenOverview extends Component {\n\n  render() {\n\n    return (\n\n      <div className=\"content-box\">\n        <Row>\n          <Col xs=\"6\">\n            <div className=\"latest-charts-container\">\n              <h4>Top Gainers</h4>\n              <MoversTable\n                  showHeaders={true}\n                  data={this.props.topGainers}\n              />\n            </div>\n          </Col>\n          <Col xs=\"6\">\n            <div className=\"latest-charts-container\">\n              <h4>Top Losers</h4>\n              <MoversTable\n                showHeaders={true}\n                data={this.props.topLosers}\n              />\n            </div>\n          </Col>\n        </Row>\n      </div>\n\n    )\n  }\n\n}\n\nexport default TopTenOverview","import React, { Component } from 'react';\nimport Moment from 'react-moment';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableFooter from '@material-ui/core/TableFooter';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nimport TablePaginationActionsWrapped from '../util/TablePaginationActions'\n\nimport './css/news_feed.css'\n\nconst ROWS_PER_PAGE = 5\n\nclass CoinDetails extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      data: null,\n      page: 0\n    };\n  }\n\n  // This gets called by the pagination class (passed as a prop)\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  };\n\n  render() {\n    \n    // Loading animation \n    var Spinner = require('react-spinkit');  \n\n    let data = this.state.data\n    let page = this.state.page\n\n    if (data) {\n\n      return (\n\n        <div className=\"content-box\">\n          <div className=\"news-feed-main-container\">\n            <h4>Latest News</h4> \n            <Table className=\"news-feed-table\">\n            <TableBody>\n              {data.slice(page * ROWS_PER_PAGE, (page + 1) * ROWS_PER_PAGE).map( (newsItem, index) => (\n                <TableRow key={newsItem.id} >\n                  <TableCell>\n                    <div className=\"news-item\">\n                      <h5><a href={newsItem.url} target=\"_blank\" rel=\"noopener noreferrer\">{newsItem.title}</a></h5>\n                      <p className=\"accent-text\"><Moment format=\"LT | MMM DD YYYY\">{newsItem.published_at}</Moment> | <span className=\"bolded\">{newsItem.source.title}</span></p>\n                    </div>   \n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n            <TableFooter>\n              <TableRow>\n                  <TablePagination\n                    colSpan={1}\n                    count={data.length}\n                    rowsPerPageOptions={[ROWS_PER_PAGE]}\n                    rowsPerPage={ROWS_PER_PAGE}\n                    page={this.state.page}\n                    onChangePage={this.handleChangePage}\n                    ActionsComponent={TablePaginationActionsWrapped}\n                  />\n              </TableRow>\n            </TableFooter>\n          </Table>\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className=\"content-box\">\n          <div className=\"loading-animation-content-container\">\n            <div className=\"loading-animation-news\">\n              <Spinner name='double-bounce' color=\"orange\"/>\n            </div>\n          </div>\n        </div>\n        )\n    }\n  }\n\n  componentDidMount() {\n    this.fetchData()\n    // Continue fetching every 5 min\n    setInterval(() => {\n      this.fetchData()\n    }, 300000) \n  }\n\n  // Pull data for ticker\n  fetchData = () => {\n\n    // TODO cross-env doesn't accept more than 1 environment variable\n    fetch(`https://cryptopanic.com/api/v1/posts/?auth_token=${this.props.auth}&public=true`, {\n      headers: {\n        'Access-Control-Allow-Origin':'*'\n      },\n      crossDomain:true,\n      method: 'GET'\n    })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            data: result.results\n          });\n          console.log(result.results)\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n\n  }\n\n}\n\nexport default CoinDetails","import React, { Component } from 'react';\nimport TextField from '@material-ui/core/TextField'\nimport Button from '@material-ui/core/Button'\nimport { withStyles } from '@material-ui/core/styles';\n\nimport './css/api_key_form.css'\n\nclass ApiKeyForm extends Component {\n\n    state = {\n        \"cryptopanicKey\": null,\n        \"cryptocompareKey\": null,\n      }\n\n    // Form methods\n    onFieldChanged = (event, stateKey) => {\n        this.setState({\n            [stateKey]: event.target.value\n        })\n    };\n\n    // Parent callback is a function passed in as a prop to notify the main App to reload\n    onFormSubmission = (event, parentCallback) => {\n        // TODO we need more validation\n        event.preventDefault()\n        if (this.state.cryptopanicKey && this.state.cryptocompareKey) {\n            parentCallback(this.state)\n        }\n    };\n\n    render() {\n        return (\n\n            <form className=\"api-key-form-container\">\n\n                <h4>Please create and enter the following API keys to use the dashboard.</h4>\n                <p>Sign up directly at <a href=\"https://min-api.cryptocompare.com/pricing\" target=\"_blank\" rel=\"noopener noreferrer\">CryptoCompare</a> and <a href=\"https://cryptopanic.com/developers/api/\" target=\"_blank\" rel=\"noopener noreferrer\">CryptoPanic</a> for their free API services. These keys will be stored in your browser &amp; will not be shared.</p>\n\n                <div>\n                <TextField\n                id=\"cryptocompare\"\n                label=\"CryptoCompare Key\"\n                placeholder=\"Enter Your API Key\"\n                className=\"api-form-field\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                onChange={(e) => {this.onFieldChanged(e, \"cryptocompareKey\")}}\n                />\n                </div>\n\n                \n                <div>\n                <TextField\n                id=\"cryptopanic\"\n                label=\"CryptoPanic Key\"\n                placeholder=\"Enter Your API Key\"\n                className=\"api-form-field\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                onChange={(e) => {this.onFieldChanged(e, \"cryptopanicKey\")}}\n                />\n                </div>\n\n\n                <div>\n                <Button variant=\"contained\" color=\"primary\" className=\"api-form-submit\"\n                        onClick={(e) => this.onFormSubmission(e, this.props.newKeysEntered)}>\n                    Submit\n                </Button>\n                </div>\n\n            </form>\n\n        )\n    }\n\n}\n\nexport default withStyles({})(ApiKeyForm);","import React, { Component } from 'react'\nimport TopTenOverview from './market_overview/TopTenOverview'\nimport LatestActivity from './market_overview/LatestActivity'\nimport NewsFeed from './market_overview/NewsFeed'\nimport ls from 'local-storage'\nimport ApiKeyForm from './settings/ApiKeyForm';\n\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n        error: null,\n        isLoaded: false,\n        data: null,\n        keys: {\n          \"cryptocompare\": null,\n          \"cryptopanic\": null \n        }\n    };\n  }\n\n  newKeysEntered = (keys) => {\n    ls.set(\"cryptopanicKey\", keys.cryptopanicKey)\n    ls.set(\"cryptocompareKey\", keys.cryptocompareKey)\n    window.location.reload()\n  };\n\n  render() {\n\n    // If keys are entered, go straight to dashboard\n    if (this.state.keys.cryptocompare && this.state.keys.cryptocompare) {\n\n      // Loading animation \n      var Spinner = require('react-spinkit');  \n      // Wait for data to load\n      if(this.state.data) {\n\n        let topChartsData = this.state.data\n        // Slice to create a new array\n        // Get largest movers\n        let sortedBy24HrPrice = topChartsData.slice().sort((a, b) => a.RAW.USD.CHANGEPCT24HOUR < b.RAW.USD.CHANGEPCT24HOUR)\n        let topTenGainers = sortedBy24HrPrice.slice(0, 10)\n        let topTenLosers = sortedBy24HrPrice.slice(-10).reverse()\n\n        return (\n          <div className=\"app\">\n          \n            <div className=\"header\">\n              <h1>\n                Cryptocurrency Dashboard\n              </h1>\n            </div>\n            \n            <div className=\"main_container\">\n              <TopTenOverview data={topChartsData}/>\n            </div>\n\n            <div className=\"main_container\">\n              <LatestActivity topGainers={topTenGainers} topLosers={topTenLosers}/>\n            </div>\n\n              <div className=\"main_container\">\n                <NewsFeed auth={this.state.keys.cryptopanic}/>\n              </div>\n\n          </div>\n        );\n      } else {\n\n        // If data isn't loaded, display a loading animation\n        return (\n          <div className=\"loading-animation-container\">\n            <div className=\"loading-animation-main\">\n              <Spinner name='double-bounce' color=\"orange\"/>\n            </div>\n          </div>\n        )\n      }\n    }\n\n    // No keys entered, render the input component\n    else {\n      return (\n        <ApiKeyForm newKeysEntered={this.newKeysEntered}></ApiKeyForm>\n      )\n    }\n\n  }\n\n  // Pull data (only from cryptocompare for now)\n  fetchData = () => {\n\n    fetch(`https://min-api.cryptocompare.com/data/top/mktcapfull?limit=100&tsym=USD`, {\n      method: 'GET',\n      headers: {\n        'authorization': `Apikey ${this.state.keys.cryptocompare}`\n        },\n    })\n      .then(res => res.json())\n      .then(\n        (result) => {\n          console.log(result)\n          this.setState({\n            isLoaded: true,\n            data: result.Data\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error\n          });\n        }\n      )\n\n  }\n\n  // Initialize keys before component mounts\n  componentWillMount() {\n\n    let cryptocompareKey = ls.get(\"cryptocompareKey\")\n    let cryptopanicKey = ls.get(\"cryptopanicKey\")\n\n    // If keys exist, then start pulling data\n    if(cryptocompareKey && cryptopanicKey) {\n      let keys = {\n        \"cryptocompare\": cryptocompareKey,\n        \"cryptopanic\": cryptopanicKey\n      }\n      this.setState({keys})\n  }\n}\n\n  // This will grab all the data used to render pages\n  componentDidMount() {\n\n    // If keys exist, then start pulling data\n    if(this.state.keys.cryptocompare && this.state.keys.cryptocompare) {\n      this.fetchData();\n      // Continue fetching every 5 min\n      setInterval(() => {\n        this.fetchData()\n      }, 300000) \n    }\n  }\n\n}\n\nexport default App \n","import React from 'react';\nimport './index.css';\nimport { render } from 'react-dom';\nimport App from './App';\n\n// Themes\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue'\nimport amber from '@material-ui/core/colors/amber'\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: blue,\n      secondary: amber,\n    },\n    typography: {\n        useNextVariants: true,\n        fontFamily: [\n          'Roboto',\n          'sans-serif',\n        ].join(','),\n    },\n});\n\nfunction RootApp() {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <App />\n    </MuiThemeProvider>\n  );\n}\n\nrender(<RootApp />, document.querySelector('#root'));\n"],"sourceRoot":""}