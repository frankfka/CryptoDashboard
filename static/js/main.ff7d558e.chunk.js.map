{"version":3,"sources":["util/TablePaginationActions.js","market_overview/components/TopTable.js","util/SimplePriceChart.js","market_overview/components/CoinDetails.js","market_overview/TopTenOverview.js","market_overview/components/MoversTable.js","market_overview/LatestActivity.js","market_overview/NewsFeed.js","settings/ApiKeyForm.js","App.js","index.js"],"names":["TablePaginationActions","handleFirstPageButtonClick","event","_this","props","onChangePage","handleBackButtonClick","page","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","count","rowsPerPage","_this$props","this","theme","react_default","a","createElement","className","IconButton_default","onClick","disabled","aria-label","direction","LastPage_default","FirstPage_default","KeyboardArrowRight_default","KeyboardArrowLeft_default","React","Component","withStyles","withTheme","TopTable","state","handleChangePage","setState","_this2","data","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","slice","map","ticker","index","key","CoinInfo","Name","e","rowClicked","selected","selectedTickerIndex","component","scope","src","ImageUrl","alt","FullName","DISPLAY","USD","PRICE","RAW","CHANGEPCT24HOUR","concat","TableFooter_default","TablePagination_default","colSpan","length","rowsPerPageOptions","ActionsComponent","TablePaginationActionsWrapped","SimplePriceChart","primaryColor","palette","primary","main","labels","timePoint","Date","time","datasets","borderColor","backgroundColor","pointRadius","close","options","tooltips","enabled","legend","display","scales","xAxes","type","gridLines","unit","timePeriod","yAxes","ticks","callback","value","values","es","DAY_URL","HOUR_URL","MIN_URL","TIME_PERIOD_DAY","CoinDetails","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","timePeriodSelected","newTimePeriod","preventDefault","fetchData","tickerName","fetchURL","replace","fetch","method","headers","authorization","process","CRYPTOCOMPARE_API_KEY","then","res","json","result","console","log","chartIsLoaded","chartData","Data","error","coinInfo","displayUSD","ButtonGroup_default","Button_default","variant","active","util_SimplePriceChart","MKTCAP","TOTALVOLUME24HTO","OPEN24HOUR","HIGH24HOUR","LOW24HOUR","prevProps","prevState","TopTenOverview","tableRowClicked","Row_default","Col_default","xs","components_TopTable","bind","components_CoinDetails","selectedTicker","MoversTable","header","showHeaders","components_MoversTable","topGainers","topLosers","auth","isLoaded","results","Spinner","require","newsItem","id","href","url","target","rel","title","dist_default","format","published_at","source","name","color","setInterval","ApiKeyForm","cryptopanicKey","cryptocompareKey","onFieldChanged","stateKey","defineProperty","onFormSubmission","parentCallback","TextField_default","label","placeholder","margin","onChange","core_Button_default","newKeysEntered","App","keys","ls","set","window","location","reload","cryptocompare","cryptopanic","topChartsData","sortedBy24HrPrice","sort","b","topTenGainers","topTenLosers","reverse","market_overview_TopTenOverview","LatestActivity","NewsFeed","settings_ApiKeyForm","get","createMuiTheme","blue","secondary","amber","typography","useNextVariants","fontFamily","join","render","styles","src_App","document","querySelector"],"mappings":"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","file":"static/js/main.ff7d558e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport FirstPageIcon from '@material-ui/icons/FirstPage';\r\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft';\r\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight';\r\nimport LastPageIcon from '@material-ui/icons/LastPage';\r\n\r\n\r\n/**\r\n * Component for Pagination\r\n */\r\nclass TablePaginationActions extends React.Component {\r\n\r\n    // Sets page # to 0\r\n    handleFirstPageButtonClick = event => {\r\n      this.props.onChangePage(event, 0);\r\n    };\r\n  \r\n    // Decreases page #\r\n    handleBackButtonClick = event => {\r\n      this.props.onChangePage(event, this.props.page - 1);\r\n    };\r\n  \r\n    // Increases page #\r\n    handleNextButtonClick = event => {\r\n      this.props.onChangePage(event, this.props.page + 1);\r\n    };\r\n  \r\n    // Sets page # to the max \r\n    handleLastPageButtonClick = event => {\r\n      this.props.onChangePage(event,\r\n        Math.max(0, Math.ceil(this.props.count / this.props.rowsPerPage) - 1),\r\n      );\r\n    };\r\n  \r\n    render() {\r\n      const {count, page, theme, rowsPerPage} = this.props;\r\n  \r\n      return (\r\n        <div className=\"table-pagination\">\r\n  \r\n          <IconButton\r\n            onClick={this.handleFirstPageButtonClick}\r\n            disabled={page === 0}\r\n            aria-label=\"First Page\">\r\n            {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\r\n          </IconButton>\r\n  \r\n          <IconButton\r\n            onClick={this.handleBackButtonClick}\r\n            disabled={page === 0}\r\n            aria-label=\"Previous Page\">\r\n            {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\r\n          </IconButton>\r\n  \r\n          <IconButton\r\n            onClick={this.handleNextButtonClick}\r\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n            aria-label=\"Next Page\">\r\n            {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\r\n          </IconButton>\r\n  \r\n          <IconButton\r\n            onClick={this.handleLastPageButtonClick}\r\n            disabled={page >= Math.ceil(count / rowsPerPage) - 1}\r\n            aria-label=\"Last Page\">\r\n            {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\r\n          </IconButton>\r\n  \r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // Exported pagination with styles from theme\r\n  export default withStyles({}, { withTheme: true })(\r\n    TablePaginationActions,\r\n  );","import React, { Component } from 'react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport TablePaginationActionsWrapped from '../../util/TablePaginationActions'\r\n\r\nconst CRYPTOCOMPARE_ROOT_URL = \"https://www.cryptocompare.com/\"\r\nconst ROWS_PER_PAGE = 10\r\n\r\nclass TopTable extends Component {\r\n\r\n  state = {\r\n    page: 0\r\n  };\r\n\r\n  // This gets called by the pagination class (passed as a prop)\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  render() {\r\n\r\n    let data = this.props.data\r\n\r\n    // Only load table if data is available\r\n    if (data) {\r\n      let page = this.state.page\r\n      return (\r\n          <Table className=\"top-charts-table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>#</TableCell>\r\n                <TableCell>Ticker</TableCell>\r\n                <TableCell>Name</TableCell>\r\n                <TableCell>Price (USD)</TableCell>\r\n                <TableCell>24 Hr Change (%)</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n\r\n            <TableBody>\r\n              {data.slice(page * ROWS_PER_PAGE, (page + 1) * ROWS_PER_PAGE).map( (ticker, index) => (\r\n\r\n                <TableRow \r\n                  className=\"cursor-pointer\" \r\n                  key={ticker.CoinInfo.Name} \r\n                  onClick={((e) => this.props.rowClicked(e, index + page*10))}\r\n                  selected={index === (this.props.selectedTickerIndex - page*10)}\r\n                >\r\n                  <TableCell className=\"table-index-coln\">{index + 1 + page*10}</TableCell>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    <img className=\"ticker-img\" src={CRYPTOCOMPARE_ROOT_URL+ticker.CoinInfo.ImageUrl} alt={ticker.CoinInfo.Name}/>&nbsp;&nbsp;{ticker.CoinInfo.Name}\r\n                  </TableCell>\r\n                  <TableCell>{ticker.CoinInfo.FullName}</TableCell>\r\n                  <TableCell>{ticker.DISPLAY.USD.PRICE}</TableCell>\r\n                  <TableCell><span className={ticker.RAW.USD.CHANGEPCT24HOUR > 0 ? \"green_text\" : \"red_text\"}>{`${ticker.DISPLAY.USD.CHANGEPCT24HOUR} %`}</span></TableCell>\r\n                </TableRow>\r\n\r\n              ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                  <TablePagination\r\n                    colSpan={5}\r\n                    count={data.length}\r\n                    rowsPerPageOptions={[ROWS_PER_PAGE]}\r\n                    rowsPerPage={ROWS_PER_PAGE}\r\n                    page={this.state.page}\r\n                    onChangePage={this.handleChangePage}\r\n                    ActionsComponent={TablePaginationActionsWrapped}\r\n                  />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n\r\n      )\r\n    } else {\r\n      // If no data loaded, return an empty div\r\n      return null\r\n    }\r\n  }\r\n}\r\n\r\nexport default TopTable","import React, { Component } from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport { withTheme } from '@material-ui/core/styles';\r\n\r\nclass SimplePriceChart extends Component {\r\n\r\n  render() {\r\n\r\n    const primaryColor = this.props.theme.palette.primary.main;\r\n\r\n    if(this.props.data) {\r\n      const times = this.props.data.map(timePoint =>\r\n        new Date(timePoint.time*1000)\r\n      );\r\n      const closePrices = this.props.data.map(timePoint => timePoint.close)\r\n      const data = {\r\n        labels: times,\r\n        datasets: [\r\n          {\r\n            borderColor: primaryColor,\r\n            backgroundColor: '#FFFFFF',\r\n            pointRadius: 0,\r\n            data: closePrices,\r\n          }\r\n        ],\r\n      }\r\n\r\n      const options = {\r\n        tooltips: {\r\n          enabled: false\r\n        },\r\n        legend: {\r\n          display: false\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n              type: 'time',\r\n              gridLines: {\r\n                display:false\r\n              },\r\n              time: {\r\n                  unit: this.props.timePeriod\r\n              }\r\n          }],\r\n          yAxes: [{\r\n            gridLines: {\r\n              display:false\r\n            },\r\n            ticks: {\r\n                callback: function(value, index, values) {\r\n                    // Include a dollar sign in the ticks\r\n                    return '$ ' + value;\r\n                }\r\n            }\r\n          }]\r\n        }\r\n      }\r\n      \r\n      return (\r\n        <div className=\"simple-price-chart\">\r\n          <Line data={data} options={options}/>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"simple-price-chart-error\">\r\n          <h2>Error loading data</h2>\r\n        </div>\r\n      )\r\n    }\r\n    \r\n  }\r\n\r\n}\r\n\r\nexport default withTheme()(SimplePriceChart);","import React, { Component } from 'react';\r\nimport './css/coin_details.css'\r\nimport SimplePriceChart from '../../util/SimplePriceChart'\r\nimport ButtonGroup from 'react-bootstrap/ButtonGroup'\r\nimport Button from  'react-bootstrap/Button'\r\n\r\n// For fetching data - consider passing some of these as props\r\nconst NUM_DAYS = 10\r\nconst NUM_MIN = 120\r\nconst NUM_HR = 48\r\n\r\nconst DAY_URL = `https://min-api.cryptocompare.com/data/histoday?fsym={TICKER}&tsym=USD&limit=${NUM_DAYS}`\r\nconst HOUR_URL = `https://min-api.cryptocompare.com/data/histohour?fsym={TICKER}&tsym=USD&limit=${NUM_HR}`\r\nconst MIN_URL =  `https://min-api.cryptocompare.com/data/histominute?fsym={TICKER}&tsym=USD&limit=${NUM_MIN}`\r\n\r\nconst TIME_PERIOD_DAY = \"day\"\r\nconst TIME_PERIOD_HR = \"hour\"\r\nconst TIME_PERIOD_MIN = \"minute\"\r\n\r\nclass CoinDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      chartIsLoaded: false,\r\n      chartData: null,\r\n      timePeriod: TIME_PERIOD_DAY\r\n    };\r\n  }\r\n\r\n  timePeriodSelected = (e, newTimePeriod) => {\r\n    e.preventDefault()\r\n    this.setState({\r\n      timePeriod: newTimePeriod\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    let ticker = this.props.ticker\r\n    // Only show details if a ticker is defined\r\n    if (ticker) {\r\n      let coinInfo = ticker.CoinInfo\r\n      let displayUSD = ticker.DISPLAY.USD\r\n      return (\r\n        <div className=\"coin-details-wrapper\">\r\n          <h2>{coinInfo.FullName}</h2>\r\n          <h4>{coinInfo.Name} | {displayUSD.PRICE}</h4>\r\n          <div className=\"coin-details-section\">\r\n            <h3 className=\"coin-details-chart-heading\">Chart</h3>\r\n            <div className=\"timeperiod-select\">\r\n              <ButtonGroup>\r\n                <Button variant=\"outline-primary\" active={this.state.timePeriod === TIME_PERIOD_DAY} onClick={(e) => {this.timePeriodSelected(e, TIME_PERIOD_DAY)}}>Day</Button>\r\n                <Button variant=\"outline-primary\" active={this.state.timePeriod === TIME_PERIOD_HR} onClick={(e) => {this.timePeriodSelected(e, TIME_PERIOD_HR)}}>Hour</Button>\r\n                <Button variant=\"outline-primary\" active={this.state.timePeriod === TIME_PERIOD_MIN} onClick={(e) => {this.timePeriodSelected(e, TIME_PERIOD_MIN)}}>Minute</Button>\r\n              </ButtonGroup>\r\n            </div>\r\n            <SimplePriceChart data={this.state.chartData} timePeriod={this.state.timePeriod}></SimplePriceChart>\r\n          </div>\r\n\r\n          <div className=\"coin-details-section\">\r\n            <h3 className=\"coin-details-details-heading\">Details</h3>\r\n            <p><span className=\"detail-label\">Price:</span> <span>{displayUSD.PRICE}</span></p>\r\n            <p><span className=\"detail-label\">Market Cap:</span> <span>{displayUSD.MKTCAP}</span></p>\r\n            <p><span className=\"detail-label\">Change % (24hr):</span> <span>{displayUSD.CHANGEPCT24HOUR} %</span></p>\r\n            <p><span className=\"detail-label\">Volume (24hr):</span> <span>{displayUSD.TOTALVOLUME24HTO}</span></p>\r\n            <p><span className=\"detail-label\">Open (24hr):</span> <span>{displayUSD.OPEN24HOUR}</span></p>\r\n            <p><span className=\"detail-label\">High (24hr):</span> <span>{displayUSD.HIGH24HOUR}</span></p>\r\n            <p><span className=\"detail-label\">Low (24hr):</span> <span>{displayUSD.LOW24HOUR}</span></p>            \r\n          </div>\r\n\r\n        </div>\r\n\r\n      )\r\n    } else {\r\n      return <h1>No Ticker Selected</h1>\r\n    }\r\n  }\r\n\r\n  // Fetch data on new prop information\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // Also checks if price is different (meaning the component should update its display)\r\n    if ((prevProps.ticker.CoinInfo.Name !== this.props.ticker.CoinInfo.Name) || \r\n    (prevProps.ticker.DISPLAY.USD.PRICE !== this.props.ticker.DISPLAY.USD.PRICE)) {\r\n      this.fetchData(this.props.ticker.CoinInfo.Name);\r\n    }\r\n    // Check if timeperiod has changed\r\n    if(prevState.timePeriod !== this.state.timePeriod) {\r\n      this.fetchData(this.props.ticker.CoinInfo.Name);\r\n    }\r\n  }\r\n  \r\n  // Fetch data when component mounts\r\n  componentDidMount() {\r\n    this.fetchData(this.props.ticker.CoinInfo.Name)\r\n  }\r\n\r\n  // Pull data for ticker\r\n  fetchData = (tickerName) => {\r\n\r\n    let fetchURL\r\n    let timePeriod = this.state.timePeriod\r\n    if(timePeriod === \"day\") {\r\n      fetchURL = DAY_URL\r\n    } else if (timePeriod === \"hour\") {\r\n      fetchURL = HOUR_URL\r\n    } else {\r\n      // Default to minutes\r\n      fetchURL = MIN_URL\r\n    }\r\n    fetchURL = fetchURL.replace(\"{TICKER}\", tickerName)\r\n\r\n    fetch(fetchURL, {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Apikey ${process.env.CRYPTOCOMPARE_API_KEY}`\r\n        },\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result)\r\n          this.setState({\r\n            chartIsLoaded: true,\r\n            chartData: result.Data\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            chartIsLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default CoinDetails","import React, { Component } from 'react';\r\nimport './css/top_ten_overview.css'\r\n\r\nimport TopTable from './components/TopTable';\r\nimport CoinDetails from './components/CoinDetails'\r\n\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\n\r\nclass TopTenOverview extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTickerIndex: 0,\r\n    };\r\n  }\r\n\r\n  // Method to run when user clicks on a row\r\n  // This is passed to TopTable\r\n  tableRowClicked = (e, index) => {\r\n    e.preventDefault()\r\n    this.setState({\r\n      selectedTickerIndex: index\r\n    })\r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <div className=\"content-box\">\r\n        <Row>\r\n          <Col xs=\"8\">\r\n            <TopTable \r\n              data={this.props.data} \r\n              rowClicked={this.tableRowClicked.bind(this)}\r\n              selectedTickerIndex={this.state.selectedTickerIndex}\r\n            />\r\n          </Col>\r\n          <Col xs=\"4\">\r\n            <CoinDetails\r\n              ticker={(this.props.data ? this.props.data[this.state.selectedTickerIndex] : null)}\r\n            />\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.data) {\r\n      this.setState({selectedTicker: this.props.data[this.state.selectedTickerIndex]})\r\n    }\r\n  }\r\n\r\n  componentWillReceiveProps() {\r\n    this.setState({\r\n      selectedTicker: this.props.data[this.state.selectedTickerIndex]\r\n    })\r\n  }\r\n\r\n}\r\n\r\nexport default TopTenOverview","import React, { Component } from 'react';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\n\r\nclass MoversTable extends Component {\r\n\r\n  render() {\r\n    let data = this.props.data\r\n    if (data) {\r\n\r\n      let header;\r\n      if(this.props.showHeaders) {\r\n        header = \r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Ticker</TableCell>\r\n            <TableCell>Name</TableCell>\r\n            <TableCell>Price (USD)</TableCell>\r\n            <TableCell>24 Hr Change (%)</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n      }\r\n\r\n      return (\r\n        <Table className=\"top-movers-table\">\r\n\r\n            {header}\r\n\r\n            <TableBody>\r\n\r\n              {data.map( (ticker, index) => (\r\n\r\n                <TableRow key={ticker.CoinInfo.Name} >\r\n                  <TableCell component=\"th\" scope=\"row\">{ticker.CoinInfo.Name}</TableCell>\r\n                  <TableCell>{ticker.CoinInfo.FullName}</TableCell>\r\n                  <TableCell>{ticker.DISPLAY.USD.PRICE}</TableCell>\r\n                  <TableCell><span className={ticker.RAW.USD.CHANGEPCT24HOUR > 0 ? \"green_text\" : \"red_text\"}>{`${ticker.DISPLAY.USD.CHANGEPCT24HOUR} %`}</span></TableCell>\r\n                </TableRow>\r\n\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n      )\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n\r\nexport default MoversTable;\r\n","import React, { Component } from 'react';\r\nimport './css/latest_activity.css'\r\n\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport MoversTable from './components/MoversTable';\r\n\r\nclass TopTenOverview extends Component {\r\n\r\n  render() {\r\n\r\n    return (\r\n\r\n      <div className=\"content-box\">\r\n        <Row>\r\n          <Col xs=\"6\">\r\n            <div className=\"latest-charts-container\">\r\n              <h4>Top Gainers</h4>\r\n              <MoversTable\r\n                  showHeaders={true}\r\n                  data={this.props.topGainers}\r\n              />\r\n            </div>\r\n          </Col>\r\n          <Col xs=\"6\">\r\n            <div className=\"latest-charts-container\">\r\n              <h4>Top Losers</h4>\r\n              <MoversTable\r\n                showHeaders={true}\r\n                data={this.props.topLosers}\r\n              />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default TopTenOverview","import React, { Component } from 'react';\r\nimport Moment from 'react-moment';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableFooter from '@material-ui/core/TableFooter';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nimport TablePaginationActionsWrapped from '../util/TablePaginationActions'\r\n\r\nimport './css/news_feed.css'\r\n\r\nconst ROWS_PER_PAGE = 5\r\n\r\nclass CoinDetails extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      error: null,\r\n      isLoaded: false,\r\n      data: null,\r\n      page: 0\r\n    };\r\n  }\r\n\r\n  // This gets called by the pagination class (passed as a prop)\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  render() {\r\n    \r\n    // Loading animation \r\n    var Spinner = require('react-spinkit');  \r\n\r\n    let data = this.state.data\r\n    let page = this.state.page\r\n\r\n    if (data) {\r\n\r\n      return (\r\n\r\n        <div className=\"content-box\">\r\n          <div className=\"news-feed-main-container\">\r\n            <h4>Latest News</h4> \r\n            <Table className=\"news-feed-table\">\r\n            <TableBody>\r\n              {data.slice(page * ROWS_PER_PAGE, (page + 1) * ROWS_PER_PAGE).map( (newsItem, index) => (\r\n                <TableRow key={newsItem.id} >\r\n                  <TableCell>\r\n                    <div className=\"news-item\">\r\n                      <h5><a href={newsItem.url} target=\"_blank\" rel=\"noopener noreferrer\">{newsItem.title}</a></h5>\r\n                      <p className=\"accent-text\"><Moment format=\"LT | MMM DD YYYY\">{newsItem.published_at}</Moment> | <span className=\"bolded\">{newsItem.source.title}</span></p>\r\n                    </div>   \r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n            <TableFooter>\r\n              <TableRow>\r\n                  <TablePagination\r\n                    colSpan={1}\r\n                    count={data.length}\r\n                    rowsPerPageOptions={[ROWS_PER_PAGE]}\r\n                    rowsPerPage={ROWS_PER_PAGE}\r\n                    page={this.state.page}\r\n                    onChangePage={this.handleChangePage}\r\n                    ActionsComponent={TablePaginationActionsWrapped}\r\n                  />\r\n              </TableRow>\r\n            </TableFooter>\r\n          </Table>\r\n          </div>\r\n        </div>\r\n      )\r\n    } else {\r\n      return (\r\n        <div className=\"content-box\">\r\n          <div className=\"loading-animation-content-container\">\r\n            <div className=\"loading-animation-news\">\r\n              <Spinner name='double-bounce' color=\"orange\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        )\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchData()\r\n    // Continue fetching every 5 min\r\n    setInterval(() => {\r\n      this.fetchData()\r\n    }, 300000) \r\n  }\r\n\r\n  // Pull data for ticker\r\n  fetchData = () => {\r\n\r\n    fetch(`https://cryptopanic.com/api/v1/posts/?auth_token=${this.props.auth}&public=true`)\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            data: result.results\r\n          });\r\n          console.log(result.results)\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default CoinDetails","import React, { Component } from 'react';\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport './css/api_key_form.css'\r\n\r\nclass ApiKeyForm extends Component {\r\n\r\n    state = {\r\n        \"cryptopanicKey\": null,\r\n        \"cryptocompareKey\": null,\r\n      }\r\n\r\n    // Form methods\r\n    onFieldChanged = (event, stateKey) => {\r\n        this.setState({\r\n            [stateKey]: event.target.value\r\n        })\r\n    };\r\n\r\n    // Parent callback is a function passed in as a prop to notify the main App to reload\r\n    onFormSubmission = (event, parentCallback) => {\r\n        // TODO we need more validation\r\n        event.preventDefault()\r\n        if (this.state.cryptopanicKey && this.state.cryptocompareKey) {\r\n            parentCallback(this.state)\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n\r\n            <form className=\"api-key-form-container\">\r\n\r\n                <h4>Please create and enter the following API keys to use the dashboard.</h4>\r\n                <p>Sign up directly at <a href=\"https://min-api.cryptocompare.com/pricing\" target=\"_blank\" rel=\"noopener noreferrer\">CryptoCompare</a> and <a href=\"https://cryptopanic.com/developers/api/\" target=\"_blank\" rel=\"noopener noreferrer\">CryptoPanic</a> for their free API services. These keys will be stored in your browser &amp; will not be shared.</p>\r\n                <p>Until a backend has been set up, you will need to <a href=\"https://addons.mozilla.org/en-US/firefox/addon/cors-everywhere/\" target=\"_blank\" rel=\"noopener noreferrer\">disable CORS</a> in your browser for this to work.</p>\r\n\r\n                <div>\r\n                <TextField\r\n                id=\"cryptocompare\"\r\n                label=\"CryptoCompare Key\"\r\n                placeholder=\"Enter Your API Key\"\r\n                className=\"api-form-field\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => {this.onFieldChanged(e, \"cryptocompareKey\")}}\r\n                />\r\n                </div>\r\n\r\n                \r\n                <div>\r\n                <TextField\r\n                id=\"cryptopanic\"\r\n                label=\"CryptoPanic Key\"\r\n                placeholder=\"Enter Your API Key\"\r\n                className=\"api-form-field\"\r\n                margin=\"normal\"\r\n                variant=\"outlined\"\r\n                onChange={(e) => {this.onFieldChanged(e, \"cryptopanicKey\")}}\r\n                />\r\n                </div>\r\n\r\n\r\n                <div>\r\n                <Button variant=\"contained\" color=\"primary\" className=\"api-form-submit\"\r\n                        onClick={(e) => this.onFormSubmission(e, this.props.newKeysEntered)}>\r\n                    Submit\r\n                </Button>\r\n                </div>\r\n\r\n            </form>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default withStyles({})(ApiKeyForm);","import React, { Component } from 'react'\r\nimport TopTenOverview from './market_overview/TopTenOverview'\r\nimport LatestActivity from './market_overview/LatestActivity'\r\nimport NewsFeed from './market_overview/NewsFeed'\r\nimport ls from 'local-storage'\r\nimport ApiKeyForm from './settings/ApiKeyForm';\r\n\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        data: null,\r\n        keys: {\r\n          \"cryptocompare\": null,\r\n          \"cryptopanic\": null \r\n        }\r\n    };\r\n  }\r\n\r\n  newKeysEntered = (keys) => {\r\n    ls.set(\"cryptopanicKey\", keys.cryptopanicKey)\r\n    ls.set(\"cryptocompareKey\", keys.cryptocompareKey)\r\n    window.location.reload()\r\n  };\r\n\r\n  render() {\r\n\r\n    // If keys are entered, go straight to dashboard\r\n    if (this.state.keys.cryptocompare && this.state.keys.cryptocompare) {\r\n\r\n      // Loading animation \r\n      var Spinner = require('react-spinkit');  \r\n      // Wait for data to load\r\n      if(this.state.data) {\r\n\r\n        let topChartsData = this.state.data\r\n        // Slice to create a new array\r\n        // Get largest movers\r\n        let sortedBy24HrPrice = topChartsData.slice().sort((a, b) => a.RAW.USD.CHANGEPCT24HOUR < b.RAW.USD.CHANGEPCT24HOUR)\r\n        let topTenGainers = sortedBy24HrPrice.slice(0, 10)\r\n        let topTenLosers = sortedBy24HrPrice.slice(-10).reverse()\r\n\r\n        return (\r\n          <div className=\"app\">\r\n          \r\n            <div className=\"header\">\r\n              <h1>\r\n                Cryptocurrency Dashboard\r\n              </h1>\r\n              <p>Reminder to disable CORS to load all modules!</p>\r\n            </div>\r\n            \r\n            <div className=\"main_container\">\r\n              <TopTenOverview data={topChartsData}/>\r\n            </div>\r\n\r\n            <div className=\"main_container\">\r\n              <LatestActivity topGainers={topTenGainers} topLosers={topTenLosers}/>\r\n            </div>\r\n\r\n              <div className=\"main_container\">\r\n                <NewsFeed auth={this.state.keys.cryptopanic}/>\r\n              </div>\r\n\r\n          </div>\r\n        );\r\n      } else {\r\n\r\n        // If data isn't loaded, display a loading animation\r\n        return (\r\n          <div className=\"loading-animation-container\">\r\n            <div className=\"loading-animation-main\">\r\n              <Spinner name='double-bounce' color=\"orange\"/>\r\n            </div>\r\n          </div>\r\n        )\r\n      }\r\n    }\r\n\r\n    // No keys entered, render the input component\r\n    else {\r\n      return (\r\n        <ApiKeyForm newKeysEntered={this.newKeysEntered}></ApiKeyForm>\r\n      )\r\n    }\r\n\r\n  }\r\n\r\n  // Pull data (only from cryptocompare for now)\r\n  fetchData = () => {\r\n\r\n    fetch(`https://min-api.cryptocompare.com/data/top/mktcapfull?limit=100&tsym=USD`, {\r\n      method: 'GET',\r\n      headers: {\r\n        'authorization': `Apikey ${this.state.keys.cryptocompare}`\r\n        },\r\n    })\r\n      .then(res => res.json())\r\n      .then(\r\n        (result) => {\r\n          console.log(result)\r\n          this.setState({\r\n            isLoaded: true,\r\n            data: result.Data\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error\r\n          });\r\n        }\r\n      )\r\n\r\n  }\r\n\r\n  // Initialize keys before component mounts\r\n  componentWillMount() {\r\n\r\n    let cryptocompareKey = ls.get(\"cryptocompareKey\")\r\n    let cryptopanicKey = ls.get(\"cryptopanicKey\")\r\n\r\n    // If keys exist, then start pulling data\r\n    if(cryptocompareKey && cryptopanicKey) {\r\n      let keys = {\r\n        \"cryptocompare\": cryptocompareKey,\r\n        \"cryptopanic\": cryptopanicKey\r\n      }\r\n      this.setState({keys})\r\n  }\r\n}\r\n\r\n  // This will grab all the data used to render pages\r\n  componentDidMount() {\r\n\r\n    // If keys exist, then start pulling data\r\n    if(this.state.keys.cryptocompare && this.state.keys.cryptocompare) {\r\n      this.fetchData();\r\n      // Continue fetching every 5 min\r\n      setInterval(() => {\r\n        this.fetchData()\r\n      }, 300000) \r\n    }\r\n  }\r\n\r\n}\r\n\r\nexport default App \r\n","import React from 'react';\r\nimport './index.css';\r\nimport { render } from 'react-dom';\r\nimport App from './App';\r\n\r\n// Themes\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport blue from '@material-ui/core/colors/blue'\r\nimport amber from '@material-ui/core/colors/amber'\r\n\r\nconst theme = createMuiTheme({\r\n    palette: {\r\n      primary: blue,\r\n      secondary: amber,\r\n    },\r\n    typography: {\r\n        useNextVariants: true,\r\n        fontFamily: [\r\n          'Roboto',\r\n          'sans-serif',\r\n        ].join(','),\r\n    },\r\n});\r\n\r\nfunction RootApp() {\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <App />\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nrender(<RootApp />, document.querySelector('#root'));\r\n"],"sourceRoot":""}